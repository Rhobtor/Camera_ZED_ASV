ARG IMAGE_NAME=dustynv/ros:eloquent-ros-base-l4t-r32.7.1

FROM ${IMAGE_NAME}

ARG ZED_SDK_MAJOR=4
ARG ZED_SDK_MINOR=0
ARG ZED_SDK_PATCH=7
ARG L4T_MAJOR=32
ARG L4T_MINOR=7

ARG ROS2_DIST=eloquent

ENV DEBIAN_FRONTEND noninteractive

# Disable apt-get warnings
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 42D5A192B819C5DA || true && \
    apt-get update || true && apt-get install -y --no-install-recommends apt-utils dialog && \
    rm -rf /var/lib/apt/lists/*

ENV TZ=Europe/Paris

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \ 
    apt-get update && \
    apt-get install --yes lsb-release wget less udev sudo build-essential cmake python3 python3-dev python3-pip python3-wheel git jq libpq-dev zstd usbutils && \    
    rm -rf /var/lib/apt/lists/*

# # Add the deadsnakes repository
# RUN apt-get update && \
#     apt-get install -y software-properties-common && \
#     add-apt-repository ppa:deadsnakes/ppa

# # Install Python 3.9 from source
# RUN apt-get update && \
#     apt-get install -y --no-install-recommends \
#         build-essential libssl-dev zlib1g-dev libbz2-dev \
#         libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev && \
#     rm -rf /var/lib/apt/lists/*

# RUN wget https://www.python.org/ftp/python/3.9.10/Python-3.9.10.tgz && \
#     tar xzf Python-3.9.10.tgz && \
#     cd Python-3.9.10 && \
#     ./configure --enable-optimizations && \
#     make -j$(nproc) && \
#     make install && \
#     cd .. && \
#     rm -rf Python-3.9.10* 

# # Update pip and setuptools
# RUN python3.9 -m pip install --upgrade pip setuptools
RUN python3 -m pip install --upgrade pip setuptools
RUN apt-get update && \
    apt-get install -y \
        git \
        python3-opencv \
        libglib2.0-0

# RUN python3.9 -m pip install torch==1.10.0 torchvision==0.11.1 -f https://download.pytorch.org/whl/cu102.html

# Install the ZED SDK
RUN echo "# R${L4T_MAJOR} (release), REVISION: ${L4T_MINOR}" > /etc/nv_tegra_release && \
    apt-get update -y || true && \
    apt-get install -y --no-install-recommends zstd wget less cmake curl gnupg2 \
    build-essential python3 python3-pip python3-dev python3-setuptools libusb-1.0-0-dev -y && \
    pip install protobuf && \
    wget -q --no-check-certificate -O ZED_SDK_Linux_JP.run \
    https://download.stereolabs.com/zedsdk/${ZED_SDK_MAJOR}.${ZED_SDK_MINOR}/l4t${L4T_MAJOR}.${L4T_MINOR}/jetsons && \
    chmod +x ZED_SDK_Linux_JP.run && \
    ./ZED_SDK_Linux_JP.run silent drivers && \
    rm -rf /usr/local/zed/resources/* && \
    rm -rf ZED_SDK_Linux_JP.run && \
    rm -rf /var/lib/apt/lists/*

# This symbolic link is needed to use the streaming features on Jetson inside a container
RUN ln -sf /usr/lib/aarch64-linux-gnu/tegra/libv4l2.so /usr/lib/aarch64-linux-gnu/libv4l2.so

WORKDIR /usr/local/zed

RUN git clone https://github.com/stereolabs/zed-python-api.git
WORKDIR /usr/local/zed

RUN wget  https://download.stereolabs.com/zedsdk/4.0/whl/linux_aarch64/pyzed-4.0-cp36-cp36m-linux_aarch64.whl
RUN python3 -m pip install --ignore-installed /usr/local/zed/pyzed-4.0-cp36-cp36m-linux_aarch64.whl

# Needed to work with pyzed on ARM
ENV OPENBLAS_CORETYPE=ARMV8

# WORKDIR /home/zed_workspace
# COPY ./zed_workspace /home/zed_workspace
# RUN /bin/bash -c "source /opt/ros/eloquent/setup.bash"


WORKDIR /usr/local/zed