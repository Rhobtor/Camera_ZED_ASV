ARG IMAGE_NAME=dustynv/ros:eloquent-ros-base-l4t-r32.7.1

FROM ${IMAGE_NAME}

ARG ZED_SDK_MAJOR=3
ARG ZED_SDK_MINOR=7
ARG ZED_SDK_PATCH=7
ARG L4T_MAJOR=32
ARG L4T_MINOR=7

ARG ROS2_DIST=eloquent       # ROS2 distribution

# ZED ROS2 Wrapper dependencies version
ARG XACRO_VERSION=2.0.2
ARG DIAGNOSTICS_VERSION=3.0.0
ARG AMENT_LINT_VERSION=0.12.4
ARG GEOGRAPHIC_INFO_VERSION=1.0.4
ARG ROBOT_LOCALIZATION_VERSION=3.5.1
ENV DEBIAN_FRONTEND noninteractive

# Disable apt-get warnings
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 42D5A192B819C5DA || true && \
  apt-get update || true && apt-get install -y --no-install-recommends apt-utils dialog && \
  rm -rf /var/lib/apt/lists/*
  
ENV TZ=Europe/Paris
ENV ROS_DOMAIN_ID=42
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \ 
  apt-get update && \
  apt-get install --yes lsb-release wget less udev sudo build-essential cmake python3 python3-dev python3-pip python3-wheel git jq libpq-dev zstd usbutils && \    
  rm -rf /var/lib/apt/lists/*




RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    apt-utils dialog \
    python3.7 python3.7-dev python3.7-distutils \
    build-essential cmake python3-pip python3-wheel git jq libpq-dev zstd usbutils && \
    rm -rf /var/lib/apt/lists/*

# Update pip and setuptools
RUN python3 -m pip install --upgrade pip setuptools

# Install the ZED SDK
RUN echo "# R${L4T_MAJOR} (release), REVISION: ${L4T_MINOR}" > /etc/nv_tegra_release && \
  apt-get update -y || true && \
  apt-get install -y --no-install-recommends zstd wget less cmake curl gnupg2 \
  build-essential python3 python3-pip python3-dev python3-setuptools libusb-1.0-0-dev -y && \
  pip install protobuf && \
  wget -q --no-check-certificate -O ZED_SDK_Linux_JP.run \
  https://download.stereolabs.com/zedsdk/${ZED_SDK_MAJOR}.${ZED_SDK_MINOR}/l4t${L4T_MAJOR}.${L4T_MINOR}/jetsons && \
  chmod +x ZED_SDK_Linux_JP.run && \
  ./ZED_SDK_Linux_JP.run silent drivers && \
  rm -rf /usr/local/zed/resources/* && \
  rm -rf ZED_SDK_Linux_JP.run && \
  rm -rf /var/lib/apt/lists/*

#This symbolic link is needed to use the streaming features on Jetson inside a container
RUN ln -sf /usr/lib/aarch64-linux-gnu/tegra/libv4l2.so.0 /usr/lib/aarch64-linux-gnu/libv4l2.so

# Install the ZED ROS2 Wrapper
ENV ROS_DISTRO ${ROS2_DIST}


WORKDIR /root/ros2_ws/src
# Install the ZED ROS2 Wrapper
COPY ./zed-ros2-wrapper-eloquent/zed-ros2-wrapper-eloquent /root/ros2_ws/src
# WORKDIR /root/ros2_ws/src
# RUN git clone  https://github.com/stereolabs/zed-ros2-wrapper.git --branch eloquent



WORKDIR /root/ros2_ws/src
RUN git clone https://github.com/ament/ament_cmake.git --branch eloquent
RUN git clone https://github.com/ros2/rcutils.git --branch eloquent
RUN git clone https://github.com/ros2/rclcpp.git --branch eloquent
RUN git clone https://github.com/ros2/rcl_interfaces.git --branch eloquent
RUN git clone https://github.com/ros2/common_interfaces.git --branch eloquent
RUN git clone https://github.com/ros2/geometry2.git --branch eloquent
RUN git clone https://github.com/ros-perception/image_common.git --branch eloquent
RUN git clone https://github.com/ros2/rosidl_defaults.git --branch eloquent
RUN git clone https://github.com/ros2/rviz.git --branch eloquent



# # Check that all the dependencies are satisfied
WORKDIR /root/ros2_ws


RUN apt-get update -y || true && rosdep update --rosdistro eloquent && \
  rosdep install --from-paths src --ignore-src -r -y && \
  rm -rf /var/lib/apt/lists/*
# Install cython
RUN python3 -m pip install --upgrade cython



WORKDIR /usr/local/zed
ENV CUDA_HOME=/usr/local/cuda

WORKDIR /root/ros2_ws


RUN /bin/bash -c "source /opt/ros/eloquent/setup.bash && \
  colcon build --parallel-workers $(nproc) \
  --symlink-install \
  --event-handlers console_direct+ --base-paths src \
  --cmake-args ' -DCMAKE_BUILD_TYPE=Release' \
  '-DCUDA_CUDART_LIBRARY=/usr/local/cuda/lib64/stubs'\
  ' -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs' \
  ' -DCMAKE_CXX_FLAGS="-Wl,--allow-shlib-undefined"' \
  ' --no-warn-unused-cli'"  


WORKDIR /root/ros2_ws

# Setup environment variables
COPY ros_entrypoint_jetson.sh /sbin/ros_entrypoint.sh
RUN sudo chmod 755 /sbin/ros_entrypoint.sh

ENTRYPOINT ["/sbin/ros_entrypoint.sh"]
